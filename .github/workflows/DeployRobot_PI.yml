name: Deploy Robot - PI

on:
  workflow_dispatch:
  
jobs: 
  deploy:
    runs-on: [self-hosted, sbr-pi]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create env file
        working-directory: ./SBR_PI/DevOps
        run: |
          echo "RABBITMQ_ERLANG_COOKIE=${{ secrets.RABBITMQ_ERLANG_COOKIE }}" > ./.env
          echo "RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}" >> ./.env
          echo "RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}" >> ./.env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> ./.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> ./.env
        shell: bash
      - name: Docker Compose
        working-directory: ./SBR_PI/DevOps
        run: docker compose up --build --force-recreate -d
      - name: Restart NGINX
        working-directory: ./SBR_PI/DevOps
        run: docker compose restart sbr_nginx
      - name: Delete old images
        run: docker image prune -f

      - name: Copy Service
        run: sudo cp /home/pi/SBR/actions-runner/_work/sbr/sbr/SBR_PI/Services/sbr_host_monitor.service /etc/systemd/system/
      - name: Permisison
        run: chmod +x /home/pi/SBR/actions-runner/_work/sbr/sbr/SBR_SERV/host_connector/scripts/sbr_host_monitor.sh
      - name: Reload Systemd
        run: sudo systemctl daemon-reload
      - name: Enable the Service
        run: sudo systemctl enable sbr_host_monitor.service
      - name: Stop the Service
        run: sudo systemctl stop sbr_host_monitor.service
      - name: Start the Service
        run: sudo systemctl start sbr_host_monitor.service
      - name: Check Status
        run: sudo systemctl status sbr_host_monitor.service

      - name: Permisison Install SBR Script
        run: chmod +x /home/pi/SBR/actions-runner/_work/sbr/sbr/SBR_PI/Scripts/install_sbr.sh
      - name: Install SBR Script
        run: /home/pi/SBR/actions-runner/_work/sbr/sbr/SBR_PI/Scripts/install_sbr.sh