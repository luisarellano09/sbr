/**
 * @file RegisterManager.cpp
 * @author Luis Arellano (luis.arellano09@gmail.com)
 * @brief Class to Manage the registers
 * @version 1.0
 * @date 14-06-2020
 * 
 * 
 */
/*******************************************************************************************************************************************
 *  												Includes
 *******************************************************************************************************************************************/
#include "RegisterManager.h"

/*******************************************************************************************************************************************
 *  												Constructor
 *******************************************************************************************************************************************/

//=====================================================================================================
RegisterManager::RegisterManager(uint8_t _SO, uint8_t _SI, uint8_t _SCLK, uint8_t _SS)
    : SPI_SlaveManager(_SO, _SI, _SCLK, _SS){

    
}

//=====================================================================================================
RegisterManager::~RegisterManager(){}

/*******************************************************************************************************************************************
 *  												Public Methods
 *******************************************************************************************************************************************/

//=====================================================================================================
RC_e RegisterManager::RegisterHandler(COM_REQUEST_REG_ID_e regId, uint32_t data){

    Serial.println("======== REGISTER =========");
    Serial.print("Req: ");
    Serial.println(regId);
    Serial.print("Data: ");
    Serial.println(data);
}

/*******************************************************************************************************************************************
 *  												Private Methods
 *******************************************************************************************************************************************/

//=====================================================================================================

