/**
 * @file TableRT.cpp
 * @author Luis Arellano (luis.arellano09@gmail.com)
 * @brief Class to describe the Data Table in Runtime
 * @version 1.0
 * @date 13-06-2020
 * 
 * 
 */



/*******************************************************************************************************************************************
 *  												INCLUDES
 *******************************************************************************************************************************************/
#include "./TableRT.h"

/*******************************************************************************************************************************************
 *  												Constructor
 *******************************************************************************************************************************************/

//=====================================================================================================
TableRT::TableRT(){
    // Clean all registers
    CleanRegisters();
}

//=====================================================================================================
TableRT::~TableRT(){}

/*******************************************************************************************************************************************
 *  												Public Methods
 *******************************************************************************************************************************************/

//=====================================================================================================
RC_e TableRT::AddSubscriber(COM_REQUEST_REG_ID_e regID, Devices_e subscriber){
    // Add subscriber in the register
    this->m_Registers[regID].AddSubscriber(subscriber);
    return RC_e::SUCCESS;
}

//=====================================================================================================
RC_e TableRT::UpdateRegister(COM_REQUEST_REG_ID_e regID, uint32_t data){
    // Update value
    this->m_Registers[regID].m_value = data;
    return RC_e::SUCCESS;
}

/*******************************************************************************************************************************************
 *  												Private Methods
 *******************************************************************************************************************************************/

//=====================================================================================================
RC_e TableRT::CleanRegisters(){
    // Iterate all registers
    for(auto i = 0; i < COM_REQUEST_REG_ID_e::REQUEST_REG_LENGTH; i++){
        // Clean subscribers
        this->m_Registers[i].CleanSubscribers();
        this->m_Registers[i].m_value = 0;
    }
    return RC_e::SUCCESS;
}
