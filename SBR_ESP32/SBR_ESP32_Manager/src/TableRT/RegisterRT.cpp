/**
 * @file RegisterRT.cpp
 * @author Luis Arellano (luis.arellano09@gmail.com)
 * @brief Class to describe a register of the Data Table in Runtime
 * @version 1.0
 * @date 13-06-2020
 * 
 * 
 */

/*******************************************************************************************************************************************
 *  												INCLUDES
 *******************************************************************************************************************************************/
#include "./RegisterRT.h"

/*******************************************************************************************************************************************
 *  												Constructor
 *******************************************************************************************************************************************/

//=====================================================================================================
RegisterRT::RegisterRT(){
    // Init
    this->m_value = 0;
    this->m_subscribers_index = -1;

    // Clean
    CleanSubscribers();
}

//=====================================================================================================
RegisterRT::~RegisterRT(){}

/*******************************************************************************************************************************************
 *  												Public Methods
 *******************************************************************************************************************************************/

//=====================================================================================================
RC_e RegisterRT::AddSubscriber(Devices_e subscriber){
    // Check if max index is reached
    if(this->m_subscribers_index < Devices_e::DEVICE_LENGTH - 1){
        // Increase index
        this->m_subscribers_index++;

        // Add subscriber
        this->m_subscribers[this->m_subscribers_index] = subscriber;
    }

    return RC_e::SUCCESS;
}

//=====================================================================================================
RC_e RegisterRT::CleanSubscribers(){
    // Iterate through devices
    for(auto i = 0; i< Devices_e::DEVICE_LENGTH; i++){
        this->m_subscribers[i] = Devices_e::DEVICE_NONE;
    };

    // Init
    this->m_subscribers_index = -1;

    return RC_e::SUCCESS;
}


/*******************************************************************************************************************************************
 *  												Private Methods
 *******************************************************************************************************************************************/
