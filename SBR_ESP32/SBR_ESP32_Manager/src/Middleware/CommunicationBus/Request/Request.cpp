/**
 * @file Request.cpp
 * @author Luis Arellano (luis.arellano09@gmail.com)
 * @brief Class to describe a request
 * @version 1.0
 * @date 14.09.2022
 * 
 */

/*******************************************************************************************************************************************
 *  												INCLUDE
 *******************************************************************************************************************************************/
#include "Request.h"
#include "RequestConfig.h"
#include "../../../Definition/Global/RC.h"
#include "../../../Definition/Global/Devices.h"
#include "../../../Definition/Global/RegisterTableDef.h"


/*******************************************************************************************************************************************
 *  												CONSTRUCTOR
 *******************************************************************************************************************************************/

Request::Request(){
    this->Clean();
}


//=====================================================================================================

Request::~Request(){}


/*******************************************************************************************************************************************
 *  												PUBLIC METHODS
 *******************************************************************************************************************************************/

RC_e Request::Clean(){
    this->nodeId = DEVICE_e::NONE_DEVICE;
    this->reqType = COM_REQUEST_TYPE_e::NONE;
    this->regId = COM_REQUEST_REG_ID_e::NONE_REG_ID;
    this->data = 0;
    this->CRC = 0;
    return RC_e::SUCCESS;
}


//=====================================================================================================

RC_e Request::Print(){
    Serial.println("*****************");
    Serial.printf("* nodeId: %d\r\n", this->nodeId);
    Serial.printf("* reqType: %d\r\n", this->reqType);  
    Serial.printf("* regId: %d\r\n", this->regId);
    Serial.printf("* data: %d\r\n", this->data);
    Serial.printf("* CRC: %d\r\n", this->CRC);
    Serial.println("*****************");
    return RC_e::SUCCESS;
}


/*******************************************************************************************************************************************
 *  												PRIVATE METHODS
 *******************************************************************************************************************************************/

