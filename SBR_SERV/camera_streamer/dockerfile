FROM nvcr.io/nvidia/l4t-ml:r36.2.0-py3 as dev

# Install Gstreamer: https://github.com/dusty-nv/jetson-containers/blob/master/packages/gstreamer/Dockerfile
RUN apt-get update && \
    apt-get purge -y '*opencv*' || echo "existing OpenCV installation not found" && \
    apt-get install -y --no-install-recommends \
        dialog libglew-dev \
        glew-utils \
        libgstrtspserver-1.0-dev \
        libglib2.0-dev \
        libsoup2.4-dev \
        libjson-glib-dev \
        qtbase5-dev \
        lsb-release \
        libgstreamer1.0-dev \
        gstreamer1.0-tools \
        gstreamer1.0-libav \
        gstreamer1.0-rtsp \
        gstreamer1.0-plugins-good \
        gstreamer1.0-plugins-bad \
        gstreamer1.0-plugins-ugly \
        libgstreamer-plugins-base1.0-dev \
        libgstreamer-plugins-good1.0-dev \
        libgstreamer-plugins-bad1.0-dev \
        libgstrtspserver-1.0-0 \
        python3-gi \
        python3-gst-1.0 && \
    if [ `lsb_release --codename --short` != 'bionic' ]; then \
    apt-get install -y --no-install-recommends \
		  gstreamer1.0-plugins-rtp; \
    else echo "skipping packages unavailable for Ubuntu 18.04"; fi \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy Gstreamer in a temporary directory
RUN cp -r /usr/include/gstreamer-1.0 /tmp

# Install Opencv: https://github.com/dusty-nv/jetson-containers/blob/master/packages/opencv/opencv_builder/Dockerfile
RUN ./opt/opencv_install.sh

# Copy Gstreamer from the temporary directory
RUN cp -r /tmp/gstreamer-1.0 /usr/include && \
    rm -rf /tmp/gstreamer-1.0 && \
    ln -s /usr/lib/$(uname -m)-linux-gnu/libgstwebrtc-1.0.so.0 /usr/lib/$(uname -m)-linux-gnu/libgstwebrtc-1.0.so

# Clone and build jetson-utils
RUN mkdir jetson-utils_build && \ 
    git clone https://github.com/dusty-nv/jetson-utils && \ 
    cd jetson-utils && \ 
    mkdir build && \ 
    cd build && \ 
    cmake ../ && \ 
    make -j$(nproc) && \ 
    make install && \ 
    ldconfig && \
    cd / && \
    rm -rf jetson-utils_build

# Clone pyrealsense2
RUN apt update && \
    apt install -y libssl-dev \
    libusb-1.0-0-dev \
    pkg-config \
    libgtk-3-dev \
    libglfw3-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    install python3-opengl

RUN mkdir pyrealsense2_build && \
    cd pyrealsense2_build && \
    git clone --branch v2.54.2 https://github.com/IntelRealSense/librealsense.git && \ 
    cd librealsense && \
    mkdir build && \ 
    cd build && \ 
    cmake ../ \ 
    -DFORCE_RSUSB_BACKEND=ON \ 
    -DBUILD_PYTHON_BINDINGS:bool=true \ 
    -DCMAKE_BUILD_TYPE=release \ 
    -DBUILD_EXAMPLES=false \ 
    -DBUILD_GRAPHICAL_EXAMPLES=false \ 
    -DBUILD_WITH_CUDA:bool=true && \
    make -j$(nproc) && \
    make install && \
    cd / && \
    rm -rf pyrealsense2_build

WORKDIR /sbr

RUN rm -rf src
COPY ./src ./src

CMD ["python3", "-u", "./src/main.py"]